import requests
import json
import logging
from typing import Dict, Optional

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('test_api.log'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

def send_webhook_request(message: str, base_url: str = "http://localhost:8000") -> Optional[Dict]:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç POST-–∑–∞–ø—Ä–æ—Å –Ω–∞ webhook endpoint.
    
    Args:
        message: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
        base_url: –ë–∞–∑–æ–≤—ã–π URL API (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: http://localhost:8000)
        
    Returns:
        Optional[Dict]: –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è –∏–ª–∏ None –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
    """
    try:
        # –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
        url = f"{base_url}/webhook"
        
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞
        payload = {
            "message": message
        }
        
        # –ó–∞–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
        headers = {
            "Content-Type": "application/json"
        }
        
        logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ {url}")
        logger.info(f"Payload: {json.dumps(payload, ensure_ascii=False)}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST-–∑–∞–ø—Ä–æ—Å
        response = requests.post(
            url,
            json=payload,
            headers=headers
        )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞
        response.raise_for_status()
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞
        response_data = response.json()
        logger.info(f"–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç: {json.dumps(response_data, ensure_ascii=False)}")
        
        return response_data
        
    except requests.exceptions.RequestException as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {str(e)}")
        return None
    except json.JSONDecodeError as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ JSON-–æ—Ç–≤–µ—Ç–∞: {str(e)}")
        return None
    except Exception as e:
        logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
        return None

def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API
    """
    # –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    test_message = "—Å–æ–∑–¥–∞–π —Ç–∞–±–ª–∏—Ü—É –§–µ—Å—Ç–∏–≤–∞–ª—å –ú–µ–¥–∞, –¥–æ–±–∞–≤—å —Ä–∞–∑–¥–µ–ª—ã —Å—É–¥—å–∏, —Å—É–≤–µ–Ω–∏—Ä–∫–∞, –Ω–∞–≥—Ä–∞–¥–Ω–∞—è"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    result = send_webhook_request(test_message)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if result:
        if result.get("status") == "success":
            print("\n‚úÖ –ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!")
            print(f"üìù –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {result['message']}\n")
        else:
            print("\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞!")
            print(f"üîç –î–µ—Ç–∞–ª–∏: {result.get('message', '–ù–µ—Ç –¥–µ—Ç–∞–ª–µ–π')}\n")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞\n")

if __name__ == "__main__":
    main()
