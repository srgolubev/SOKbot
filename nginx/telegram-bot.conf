  GNU nano 4.8                                                         telegram-bot.conf                                                                    server {
    listen 80;
    server_name srgolubev.ru;

    # Перенаправление HTTP на HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name srgolubev.ru;

    # SSL-сертификаты
    ssl_certificate /etc/letsencrypt/live/srgolubev.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/srgolubev.ru/privkey.pem;

    # Оптимизация SSL
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-PO>    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    # Корневая директория для статических файлов
    root /opt/SOKbot/public;
    index index.html;

    # Основной маршрут для статических файлов
    location / {
        try_files $uri $uri/ =404;
    }

    # Явно указываем типы файлов
    location ~ \.html$ {
        add_header Content-Type text/html;
    }

    location ~ \.css$ {
        add_header Content-Type text/css;
    }

    location ~ \.js$ {
        add_header Content-Type application/javascript;
    }

    # Проксирование запросов к вебхуку на сервер с ботом
    location /webhook {
    proxy_pass http://212.224.118.58:8000/webhook;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;

    # Добавим важные заголовки
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Настройки для передачи тела запроса
    proxy_set_header Content-Type "application/json";
    proxy_set_header Connection "";
    proxy_http_version 1.1;

    # Увеличим буферы если нужно
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    # Важно! Не меняем Content-Type, пусть передается как есть
    proxy_pass_request_headers on;

    # Настройки для передачи тела запроса
    proxy_http_version 1.1;
    proxy_set_header Connection "";

    # Увеличим таймауты
    proxy_connect_timeout 60;
    proxy_send_timeout 60;
    proxy_read_timeout 60;

    # Увеличим буферы
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    # Разрешим большие тела запросов
    client_max_body_size 10m;
    client_body_buffer_size 128k;
}


    # Проксирование запросов к эндпоинту проверки здоровья на сервер с ботом
    location /health {
        proxy_pass http://212.224.118.58:8000/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Статус-страница для проверки работоспособности
    location /status {
        return 200 'Telegram Bot Webhook is operational';
        add_header Content-Type text/plain;
    }

    # Запрещаем доступ к .git и другим служебным директориям
    location ~ /\.(?!well-known) {
        deny all;
    }
}
